Entrega:



    URL - 05 - Construir endpoints que aceitam apenas requisições autenticadas:
            Listagem de URL Encurtados pelo usuário com contabilização de clicks - FEITO
            Deletar URL Encurtado - FEITO
            Atualizar a origem de um URL encurtado.

    06 - README ou CONTRIBUTING explicando como rodar o projeto.


** Entrega - opcional:
    02 - testes unitarios;
    03 - API está documentada;
    04 - testes com as versões do node + antigas
    08 - Utilizar changelog com a realidade do seu desenvolvimento.
    15 - Definir e assegurar quais versões do NodeJS são aceitas no projeto.


 
Desenvolvimento:
    05 - Um usuário autenticado pode listar, editar o endereço de destino e excluir URLs encurtadas por ele. (2/3)
    



#melhorias



gerar o jwt_secret ->  node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"


USAR ORM PARA MITIGAR SQL_INJECTION
uso do expiresIn no jwt
uso do Typescript para tipar as variaveis, parametros, retornos
ideias: redis para otimizar busca no servidor



user -> preciso do id para verificar se o id passado na url (que pode ser informado de outro usuario) é correspondente ao id do bearer_token
adicionar console.log nos catchs de cada controller